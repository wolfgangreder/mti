/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ContactPanel.java
 *
 * Created on 06.04.2010, 21:53:40
 */
package at.motriv.gui.contact;

import at.motriv.datamodel.entities.contact.Contact;
import at.motriv.datamodel.entities.contact.GenericContactBuilder;
import at.motriv.datamodel.entities.contact.impl.ContactBuilder;
import at.motriv.gui.contact.model.ContactCountryComboBoxModel;
import at.motriv.gui.helper.ChangeDocumentListener;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.util.Exceptions;

/**
 *
 * @author wolfi
 */
public class ContactPanel extends javax.swing.JPanel implements DocumentListener
{

  private static final long serialVersionUID = 1L;
  public static final String PROP_MODIFIED = "modified";
  public static final String PROP_VALID = "valid";
  private ContactBuilder<? extends Contact> builder;
  private Contact original;
  private boolean isModified;
  private boolean isValid;
  private final ContactCountryComboBoxModel countryModel = new ContactCountryComboBoxModel();

  /** Creates new form ContactPanel */
  public ContactPanel()
  {
    initComponents();
    countryModel.refresh();
  }

  public boolean getModified()
  {
    return isModified;
  }

  public ContactBuilder<? extends Contact> getBuilder()
  {
    store();
    return builder;
  }

  public void setBuilder(ContactBuilder<? extends Contact> builder)
  {
    if (builder == null) {
      this.builder = new GenericContactBuilder();
    } else {
      this.builder = builder;
    }
    original = this.builder.build();
    assignValues();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lbName = new javax.swing.JLabel();
    lbAddress = new javax.swing.JLabel();
    lbCity = new javax.swing.JLabel();
    lbCountry = new javax.swing.JLabel();
    lbPhone1 = new javax.swing.JLabel();
    lbPhone2 = new javax.swing.JLabel();
    lbFax = new javax.swing.JLabel();
    lbEmail = new javax.swing.JLabel();
    lbWWW = new javax.swing.JLabel();
    lbMemo = new javax.swing.JLabel();
    edName = new javax.swing.JTextField();
    edAddress = new javax.swing.JTextField();
    edAddress2 = new javax.swing.JTextField();
    edZip = new javax.swing.JTextField();
    cbCountry = new javax.swing.JComboBox();
    edEmail = new javax.swing.JTextField();
    edWWW = new javax.swing.JTextField();
    edPhone1 = new javax.swing.JTextField();
    edPhone2 = new javax.swing.JTextField();
    edFax = new javax.swing.JTextField();
    btWWW = new javax.swing.JButton();
    btMail = new javax.swing.JButton();
    edCity = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    edMemo = new javax.swing.JEditorPane();

    lbName.setLabelFor(edName);
    lbName.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbName.text")); // NOI18N

    lbAddress.setLabelFor(edAddress);
    lbAddress.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbAddress.text")); // NOI18N

    lbCity.setLabelFor(edZip);
    lbCity.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbCity.text")); // NOI18N

    lbCountry.setLabelFor(cbCountry);
    lbCountry.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbCountry.text")); // NOI18N

    lbPhone1.setLabelFor(edPhone1);
    lbPhone1.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbPhone1.text")); // NOI18N

    lbPhone2.setLabelFor(edPhone2);
    lbPhone2.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbPhone2.text")); // NOI18N

    lbFax.setLabelFor(edFax);
    lbFax.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbFax.text")); // NOI18N

    lbEmail.setLabelFor(edEmail);
    lbEmail.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbEmail.text")); // NOI18N

    lbWWW.setLabelFor(edWWW);
    lbWWW.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbWWW.text")); // NOI18N

    lbMemo.setLabelFor(edMemo);
    lbMemo.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.lbMemo.text")); // NOI18N

    edName.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edName.text")); // NOI18N
    edName.getDocument().addDocumentListener(this);

    edAddress.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edAddress.text")); // NOI18N
    edAddress.getDocument().addDocumentListener(this);

    edAddress2.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edAddress2.text")); // NOI18N
    edAddress2.getDocument().addDocumentListener(this);

    edZip.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edZip.text")); // NOI18N
    edZip.getDocument().addDocumentListener(this);

    cbCountry.setEditable(true);
    cbCountry.setModel(countryModel);

    edEmail.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edEmail.text")); // NOI18N
    edEmail.getDocument().addDocumentListener(new ChangeDocumentListener(){
      protected void changed(DocumentEvent evt) {
        emailChanged(evt);
      }
    });

    edWWW.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edWWW.text")); // NOI18N
    edWWW.getDocument().addDocumentListener(new ChangeDocumentListener(){
      protected void changed(DocumentEvent evt) {
        wwwChanged(evt);
      }
    });

    edPhone1.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edPhone1.text")); // NOI18N
    edPhone1.getDocument().addDocumentListener(this);

    edPhone2.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edPhone2.text")); // NOI18N
    edPhone2.getDocument().addDocumentListener(this);

    edFax.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edFax.text")); // NOI18N
    edFax.getDocument().addDocumentListener(this);

    btWWW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/at/motriv/gui/contact/icon_world.gif"))); // NOI18N
    btWWW.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btWWW.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btWWWActionPerformed(evt);
      }
    });

    btMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/at/motriv/gui/contact/icon_email.gif"))); // NOI18N
    btMail.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btMail.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btMailActionPerformed(evt);
      }
    });

    edCity.setText(org.openide.util.NbBundle.getMessage(ContactPanel.class, "ContactPanel.edCity.text")); // NOI18N
    edCity.getDocument().addDocumentListener(this);

    edMemo.getDocument().addDocumentListener(this);
    jScrollPane1.setViewportView(edMemo);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lbPhone1)
              .addComponent(lbWWW)
              .addComponent(lbPhone2)
              .addComponent(lbFax)
              .addComponent(lbEmail)
              .addComponent(lbCountry)))
          .addComponent(lbCity)
          .addComponent(lbMemo)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(lbName)
            .addComponent(lbAddress)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(edAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addComponent(edAddress2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(edZip, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(edCity, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
          .addComponent(edFax, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addComponent(edPhone2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addComponent(edPhone1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(edEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
              .addComponent(edWWW, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(btMail)
              .addComponent(btWWW)))
          .addComponent(cbCountry, 0, 319, Short.MAX_VALUE)
          .addComponent(edName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbName)
          .addComponent(edName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbAddress)
          .addComponent(edAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(edAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbCity)
          .addComponent(edZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(edCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbCountry)
          .addComponent(cbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(edEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lbEmail))
          .addComponent(btMail))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(edWWW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lbWWW))
          .addComponent(btWWW))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbPhone1)
          .addComponent(edPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbPhone2)
          .addComponent(edPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbFax)
          .addComponent(edFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lbMemo)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void btMailActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btMailActionPerformed
  {//GEN-HEADEREND:event_btMailActionPerformed
    URI uri = getEmailURI();
    if (uri != null && getCanEmail()) {
      try {
        Desktop.getDesktop().mail(uri);
      } catch (IOException ex) {
        Exceptions.printStackTrace(ex);
      }
    }
  }//GEN-LAST:event_btMailActionPerformed

  private void btWWWActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btWWWActionPerformed
  {//GEN-HEADEREND:event_btWWWActionPerformed
    URI uri = getWWWURI();
    if (uri != null && getCanWWW()) {
      try {
        Desktop.getDesktop().browse(uri);
      } catch (IOException ex) {
        Exceptions.printStackTrace(ex);
      }
    }
  }//GEN-LAST:event_btWWWActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btMail;
  private javax.swing.JButton btWWW;
  private javax.swing.JComboBox cbCountry;
  private javax.swing.JTextField edAddress;
  private javax.swing.JTextField edAddress2;
  private javax.swing.JTextField edCity;
  private javax.swing.JTextField edEmail;
  private javax.swing.JTextField edFax;
  private javax.swing.JEditorPane edMemo;
  private javax.swing.JTextField edName;
  private javax.swing.JTextField edPhone1;
  private javax.swing.JTextField edPhone2;
  private javax.swing.JTextField edWWW;
  private javax.swing.JTextField edZip;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lbAddress;
  private javax.swing.JLabel lbCity;
  private javax.swing.JLabel lbCountry;
  private javax.swing.JLabel lbEmail;
  private javax.swing.JLabel lbFax;
  private javax.swing.JLabel lbMemo;
  private javax.swing.JLabel lbName;
  private javax.swing.JLabel lbPhone1;
  private javax.swing.JLabel lbPhone2;
  private javax.swing.JLabel lbWWW;
  // End of variables declaration//GEN-END:variables

  private void assignValues()
  {
    edName.setText(builder.getName());
    edAddress.setText(builder.getAddress1());
    edAddress2.setText(builder.getAddress2());
    edZip.setText(builder.getZip());
    edCity.setText(builder.getCity());
    cbCountry.setSelectedItem(builder.getCountry());
    edEmail.setText(builder.getEmail());
    edWWW.setText(builder.getWWW());
    edPhone1.setText(builder.getPhone1());
    edPhone2.setText(builder.getPhone2());
    edFax.setText(builder.getFax());
    edMemo.setText(builder.getMemo());
  }

  private void store()
  {
    builder.setName(edName.getText());
    builder.setAddress1(edAddress.getText());
    builder.setAddress2(edAddress2.getText());
    builder.setZip(edZip.getText());
    builder.setCity(edCity.getText());
    builder.setCountry((String) cbCountry.getSelectedItem());
    builder.setEmail(edEmail.getText());
    builder.setWWW(edWWW.getText());
    builder.setPhone1(edPhone1.getText());
    builder.setPhone2(edPhone2.getText());
    builder.setFax(edFax.getText());
    builder.setMemo(edMemo.getText());
  }

  private void emailChanged(DocumentEvent evt)
  {
    checkModified();
    btMail.setEnabled(getEmailURI() != null && getCanEmail());
  }

  private boolean getCanEmail()
  {
    return Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.MAIL);
  }

  private URI getEmailURI()
  {
    try {
      URI uri = new URI("mailto", edEmail.getText(), null);
      return uri;
    } catch (URISyntaxException ex) {
      //Exceptions.printStackTrace(ex);
    }
    return null;
  }

  private void wwwChanged(DocumentEvent evt)
  {
    checkModified();
    btWWW.setEnabled(getWWWURI() != null && getCanWWW());
  }

  private URI getWWWURI()
  {
    try {
      String str = edWWW.getText();
      URI uri;
      if (str.toLowerCase().startsWith("http://")) {
        uri = new URI(str);
      } else {
        uri = new URI("http", str, null);
      }
      return uri;
    } catch (URISyntaxException ex) {
    }
    return null;
  }

  private boolean getCanWWW()
  {
    return Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE);
  }

  @Override
  public void insertUpdate(DocumentEvent e)
  {
    checkModified();
  }

  @Override
  public void removeUpdate(DocumentEvent e)
  {
    checkModified();
  }

  @Override
  public void changedUpdate(DocumentEvent e)
  {
    checkModified();
  }

  private boolean isModified(Object s1, Object s2)
  {
    if (s1 == null && s2 == null) {
      return false;
    }
    if (s1 != null) {
      return !s1.equals(s2);
    } else {
      return !s2.equals(s1);
    }
  }

  private void checkModified()
  {
    boolean wasModified = isModified;
    isModified = isModified(edName.getText(), original.getName())
            || isModified(edAddress.getText(), original.getAddress1())
            || isModified(edAddress2.getText(), original.getAddress2())
            || isModified(edZip.getText(), original.getZip())
            || isModified(edCity.getText(), original.getCity())
            || isModified(cbCountry.getSelectedItem(), original.getCountry())
            || isModified(edEmail.getText(), original.getEmail())
            || isModified(edWWW.getText(), original.getWWW())
            || isModified(edPhone1.getText(), original.getPhone1())
            || isModified(edPhone2.getText(), original.getPhone2())
            || isModified(edFax.getText(), original.getFax())
            || isModified(edMemo.getText(), original.getMemo());
    if (wasModified != isModified) {
      firePropertyChange(PROP_MODIFIED, wasModified, isModified);
      checkValid();
    }
  }

  private void checkValid()
  {
    boolean wasValid = isValid;
    isValid = edName.getText() != null && edName.getText().trim().length() > 0;
    if (wasValid != isValid) {
      firePropertyChange(PROP_VALID, wasValid, isValid);
    }
  }
}
